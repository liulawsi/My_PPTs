白羊說程式_Ｐython單元004_淺談變數
大家好，歡迎來到白羊老師說程式的單元。

上一個單元談輸入的時候
第一次用到了變數
也非常簡化的說了一點點變數的概念

這一個單元就是要專門講一點跟變數有關的觀念
不過不會講太多
只會教初學者目前需要的最基本觀念

首先要知道的一件事情是
電腦內存放資料是有不同的類型的

雖然電腦內都的運算與記憶儲存都是二進制的
但是還是有一些格式或是型態上的不同

初學者至少需要知道三種常用的型態
那就是 整數、文字與浮點數

接下來我們就來簡單的介紹說明

第一種型態  整數

整數是電腦內最基本 也是最原始的記憶與運算方式
整數包含正整數、負整數與零
目前電腦普遍都是採用二的補數這套方式記錄整數
初學者不必知道二的補數是甚麼
想知道二的補數是甚麼
請自行上網或是從書本去找資料

一般整數變數會有儲存的上下限值
這數值取決於用多大的空間去存放這個整數
以及是否有正負號
例如用32位元也就是四個byte存放整數
有正負號
那麼上下限就是−2,​147,​483,​648到2,​147,​483,​647
若是沒有正負號那麼就是0到4,​294,​967,​295
所以在存放數值進去時千萬不可超過範圍
否則會造成錯誤的結果


第二種型態  文字

文字在電腦裡的儲存方式是採用人為編號
或者是說編碼

現在主流的文字編碼很多都是用微軟的Unicode
常見的有utf-8, utf-16
這個編碼包含了世界上大多主要語言

至於英文通常是採用ASCII編碼
ASCII是一個古老的編碼
每一個英文字母給一個固定編號
例如大寫A是編號65
大寫B是編號66
小寫a編號97
小寫b編號98
加減乘除符號 等號括號等等符號也有編號
還有 數字0編號48
數字1編號49

不要訝異
數字也是有編號的
而且不是編號到0到9

這個編號是用來告訴電腦
我現在想顯示大寫的A
顯示加減乘除符號
又或是顯示數字0 1 2 3
所以這個編號就只是編號
真的要來做數學運算時
是不能用文字型態下的0到9去計算的！

再強調一次文字的0到9不能用來計算！
文字與數字是不一樣的！
早年的程式語言沒有嚴格的型別限制
還真的常常不小心就把文字拿來當數字計算
對初學者來說 就是會錯得莫名其妙的


第三種型態  浮點數

浮點數也就是帶小數的數字
一般會稱他為浮點數

由於電腦的硬體先天就是對應到整數運算
所以當你需要計算到帶小數的數字時
他需要用特殊的方式去計算
同時也需要用另外規定存放這種數字的格式
也就是浮點數格式
這種格式你也不必去了解太多
只要記住下面三件事

第一點
二進制無法準確記住所有帶小數的數字
有很多數字他紀錄時會有先天誤差
所以很久以前有段時間甚至出現
類似於整數3跟浮點數3.0是不會相等的怪現象
當然 現在已經改善很多
但是要記住
先天誤差還是存在的

第二點
常見的浮點數有單精度與倍精度兩種浮點數格式
這兩者就是差在精確度
前者大約有效數字在9位數字左右
後者大約再多一倍
到達18到19位數字左右
注意喔！是有效位數，不是小數後幾位數喔！
代表的是從最左邊數過來
只有前九個數字是準確的
之後的數字就有可能有誤差了

第三點
只要牽涉到浮點數運算
一般都會比正數運算要慢的多
當然兩者差異因為有新的技術也縮小了不少


以上是關於存放在電腦裡面的資料
最主要的三種型態
整數、文字與浮點數

大多數的程式語言在使用變數前
需要先宣告變數的名稱與型態
然後才可以使用這個變數
不過Python是不需要事先宣告的
這讓初學者方便很多
但是其實程式寫大了之後
也會帶來負面效果
這邊先不探討


既然變數都要取名字
那變數的名字跟人類取名字一樣
也不是隨便亂取的

個個語言的限制大同小異
我們就以Python規定來說
首先
變數名稱必須以英文字母或是底線符號開頭
大小寫均可
第二個字以後則是英文、數字及底線符號都可以
長度雖然沒有限制
但是建議還是不要太長
一方面影響程式閱讀
另一方面 打字多了也很累不是嗎

最好不要用一個字母當變數名
要用有意義的單字為佳

英文單字如果太長就用縮寫

一般來說常見的長度大約在3到十多個字母


雖然Python允許中文字當變數名稱
但是建議還是不要用
因為中英文字切換來切換去容易出錯
萬一打出全型英文字
要找錯誤時會很麻煩
再來 外國人會看不懂你的程式
如果有機會到外商公司寫程式
你寫中文變數試試
保證試試就逝世

再來
千萬不要用到保留字或是關鍵字
這些字是有特殊意義或用處的
用到很可能造成程式大亂

但是這些關鍵字這麼多
記不住啊

沒關係送上小撇步

變數名稱前加一個固定前綴
例如：mySum, myMax, myOpen

如果是函示內區域變數(函式以後說)
加上函式名當前綴
例如：func1_Max, func2_Open
甚至有軟體工程師會用自己的英文名字當前最綴
這樣程式出錯了就知道是誰寫的
這招我是不會用的
萬一程式寫錯
千萬不要被發現是我寫的！

如果看到這邊你已經覺得吃力
後面就先跳過不要看了

如果看完上面內容你還沒被搞混
那麼請接著看下面的駝峰式命名法

駝峰式命名法

當變數名和函數名稱
是由二個或多個單字連結在一起所構成的唯一識別字時

利用「駝峰式大小寫」來表示
可以增加變數和函數的可讀性。

小駝峰式命名法（lower camel case）：
第一個單字以小寫字母開始
第二個單字的首字母大寫
例如：firstName、lastName、myWorkState。

大駝峰式命名法（upper camel case）：
每一個單字的首字母都採用大寫字母
例如：FirstName、LastName、MyWorkState


「駝峰式大小寫」命名規則可視為一種慣例
這並無絕對與強制性
這種命名方式為的是增加識別性和可讀性
一旦選用或設定好命名規則
在程式編寫時就應該保持一致格式。

好了 關於變數的基本概念就說到這邊
下回開始要寫更好玩的程式了
請再接再厲 繼續看下去

白羊老師說程式
下回見


